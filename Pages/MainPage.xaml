<?xml version="1.0" encoding="utf-8" ?>
<ContentPage
    x:Class="QuickPrompt.Pages.MainPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:views="clr-namespace:QuickPrompt.Views"
    BackgroundColor="WhiteSmoke"
    Shell.PresentationMode="Animated">

    <Shell.TitleView>

        <Label
            FontFamily="Designer"
            FontSize="18"
            Text="Create"
            TextColor="{StaticResource PrimaryBlueDark}"
            VerticalOptions="Center" />
    </Shell.TitleView>

    <!--  Barra de herramientas  -->
    <ContentPage.ToolbarItems>
        <!--  Botón de Guardar  -->
        <ToolbarItem Command="{Binding SavePromptCommand}" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="MaterialIconsOutlined-Regular"
                    Glyph="&#xe86c;"
                    Color="{StaticResource PrimaryBlueDark}" />
            </ToolbarItem.IconImageSource>
            <ToolTipProperties.Text>
                Click to Save data
            </ToolTipProperties.Text>
        </ToolbarItem>

        <!--  Botón de Copiar  -->
        <ToolbarItem Command="{Binding CopyToClipboardCommand}" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="MaterialIconsOutlined-Regular"
                    Glyph="&#xe14d;"
                    Color="{StaticResource PrimaryBlueDark}" />
                <!--  Color asociado al botón Copiar  -->
            </ToolbarItem.IconImageSource>
            <ToolTipProperties.Text>
                Click to Clear Text
            </ToolTipProperties.Text>
        </ToolbarItem>

        <!--  Import Json  -->
        <ToolbarItem Command="{Binding ImportPromptCommand}" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="MaterialIconsOutlined-Regular"
                    Glyph="&#xe9fc;"
                    Color="{StaticResource PrimaryBlueDark}" />
                <!--  Color asociado al botón Copiar  -->
            </ToolbarItem.IconImageSource>
            <ToolTipProperties.Text>
                Import Json
            </ToolTipProperties.Text>
        </ToolbarItem>

        <!--  Botón para resetear posición del botón flotante  -->
        <ToolbarItem Clicked="ResetFloatingButtonPosition">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="MaterialIconsOutlined-Regular"
                    Glyph="&#xe8aa;"
                    Color="{StaticResource PrimaryBlueDark}" />
            </ToolbarItem.IconImageSource>
            <ToolTipProperties.Text>
                Reset Floating Button Position
            </ToolTipProperties.Text>
        </ToolbarItem>

        <!--  Botón de Copiar  -->
        <ToolbarItem Command="{Binding ClearTextCommand}" IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}">
            <ToolbarItem.IconImageSource>
                <FontImageSource
                    FontFamily="MaterialIconsOutlined-Regular"
                    Glyph="&#xe5c9;"
                    Color="{StaticResource PrimaryRed}" />
                <!--  Color asociado al botón Copiar  -->
            </ToolbarItem.IconImageSource>
            <ToolTipProperties.Text>
                Click to Clear Text
            </ToolTipProperties.Text>
        </ToolbarItem>
    </ContentPage.ToolbarItems>

    <AbsoluteLayout>

        <!--  Contenido Principal Scrollable  -->
        <ScrollView AbsoluteLayout.LayoutBounds="0,0,1,1" AbsoluteLayout.LayoutFlags="All">
            <Grid
                Padding="20"
                RowDefinitions="Auto,Auto,Auto,Auto,*,*,Auto"
                RowSpacing="10">

                <!--  Overlay de carga  -->
                <views:ReusableLoadingOverlay
                    x:Name="LoadingOverlay"
                    Grid.Row="0"
                    Grid.RowSpan="6"
                    IsVisible="{Binding IsLoading}"
                    Message="Loading..." />

                <!--  Título principal  -->
                <Label
                    Grid.Row="0"
                    Style="{StaticResource TitleLabelStyle}"
                    Text="Prompt Management " />

                <!--  Explicación breve  -->
                <Label
                    Grid.Row="1"
                    FontSize="14"
                    Text="Create your prompt by completing the title, description, and main prompt below. You can insert variables using the floating &lt;&gt; button."
                    TextColor="Gray" />

                <!--  Línea divisoria  -->
                <BoxView Grid.Row="2" Style="{StaticResource DividerLineStyle}" />

                <!--  Campo: Title  -->

                <VerticalStackLayout Grid.Row="3">

                    <Label
                        Grid.Row="3"
                        HorizontalOptions="Start"
                        Style="{StaticResource TitleLabelStyle}"
                        Text="Title " />
                    <Border Grid.Row="3" Style="{StaticResource InputBorderStyle}">
                        <Entry
                            IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
                            Placeholder="Example: Blog Post Generator"
                            Style="{StaticResource InputEntryStyle}"
                            Text="{Binding PromptTitle}" />
                    </Border>
                </VerticalStackLayout>

                <!--  Campo: Description  -->

                <VerticalStackLayout Grid.Row="4">

                    <Label
                        Grid.Row="4"
                        FontSize="14"
                        HorizontalOptions="Start"
                        Style="{StaticResource TitleLabelStyle}"
                        Text="Description (optional) " />
                    <Border Grid.Row="4" Style="{StaticResource InputBorderStyle}">
                        <Editor
                            IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
                            Placeholder="Short explanation of what this prompt does..."
                            Style="{StaticResource InputEditorStyle}"
                            Text="{Binding PromptDescription}" />
                    </Border>
                </VerticalStackLayout>

                <!--  Campo: Prompt  -->
                <VerticalStackLayout Grid.Row="5">

                    <Label
                        Grid.Row="5"
                        HorizontalOptions="Start"
                        Style="{StaticResource TitleLabelStyle}"
                        Text="Prompt Template " />
                    <Border Grid.Row="5" Style="{StaticResource InputBorderStyle}">
                        <Editor
                            x:Name="PromptRawEditor"
                            CursorPosition="{Binding CursorPosition, Mode=TwoWay}"
                            IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
                            IsVisible="{Binding IsVisualModeActive, Converter={StaticResource InverseBoolConverter}}"
                            Placeholder="Example: Generate a message for &lt;recipient&gt; about &lt;subject&gt;"
                            SelectionLength="{Binding SelectionLength, Mode=TwoWay}"
                            Style="{StaticResource PromptEditorStyle}"
                            Text="{Binding PromptText}" />
                    </Border>
                </VerticalStackLayout>

                <VerticalStackLayout
                    Grid.Row="6"
                    Padding="10,5"
                    Spacing="8">

                    <!--  Condición para mostrar el bloque  -->
                    <VerticalStackLayout.IsVisible>
                        <MultiBinding Converter="{StaticResource PromptReadyToShowConverter}">
                            <Binding Path="IsLoading" />
                            <Binding Path="PromptText" />
                        </MultiBinding>
                    </VerticalStackLayout.IsVisible>

                    <!--  Guía inicial para el usuario  -->
                    <Label
                        Margin="0,5,0,10"
                        FontSize="13"
                        HorizontalTextAlignment="Center"
                        LineBreakMode="WordWrap"
                        Text="💡 Switch between visual and text modes to edit your prompt. Tap any &lt;variable&gt; chip to rename it."
                        TextColor="Gray" />

                    <!--  Botones de modo  -->
                    <HorizontalStackLayout
                        Margin="0,5,0,10"
                        HorizontalOptions="Center"
                        Spacing="20">

                        <Button
                            Clicked="SwitchToEditor"
                            Style="{StaticResource YellowButtonStyle}"
                            Text="Text Mode">
                            <Button.ImageSource>
                                <FontImageSource
                                    FontFamily="MaterialIconsOutlined-Regular"
                                    Glyph="&#xe5d8;"
                                    Color="Black" />
                            </Button.ImageSource>
                        </Button>

                        <Button
                            Clicked="SwitchToChips"
                            Style="{StaticResource YellowButtonStyle}"
                            Text="Visual Mode">
                            <Button.ImageSource>
                                <FontImageSource
                                    FontFamily="MaterialIconsOutlined-Regular"
                                    Glyph="&#xe5db;"
                                    Color="Black" />
                            </Button.ImageSource>
                        </Button>
                    </HorizontalStackLayout>

                    <!--  Contenedor de chips dentro de ScrollView que sí funciona  -->
                    <ScrollView VerticalOptions="Fill">
                        <VerticalStackLayout Padding="5" Spacing="5">
                            <FlexLayout
                                x:Name="PromptChipContainer"
                                AlignItems="Center"
                                BackgroundColor="WhiteSmoke"
                                Direction="Row"
                                IsVisible="{Binding IsVisualModeActive}"
                                JustifyContent="Start"
                                Style="{StaticResource InputBorderStyle}"
                                Wrap="Wrap" />
                        </VerticalStackLayout>
                    </ScrollView>

                    <!--  Consejo visual debajo del contenedor  -->
                    <Label
                        x:Name="ChipHintLabel"
                        Margin="0,5,0,0"
                        FontSize="12"
                        HorizontalTextAlignment="Center"
                        Text="💡 Tap on a variable chip (like &lt;topic&gt;) to edit its name."
                        TextColor="Gray" />
                </VerticalStackLayout>
            </Grid>
        </ScrollView>

        <!--  Botón flotante  -->
        <Button
            x:Name="FloatingButton"
            Margin="20"
            AbsoluteLayout.LayoutBounds="0,0,50,50"
            AbsoluteLayout.LayoutFlags="None"
            Command="{Binding CreateVariableCommand}"
            IsEnabled="{Binding IsLoading, Converter={StaticResource InverseBoolConverter}}"
            Style="{StaticResource FloatingButtonStyle}">

            <Button.GestureRecognizers>
                <PanGestureRecognizer PanUpdated="OnPanUpdated" />
                <TapGestureRecognizer Tapped="OnFloatingButtonTapped" />
            </Button.GestureRecognizers>

            <Button.ImageSource>
                <FontImageSource
                    FontFamily="MaterialIconsOutlined-Regular"
                    Glyph="&#xe86f;"
                    Color="{StaticResource White}" />
            </Button.ImageSource>
        </Button>
    </AbsoluteLayout>
</ContentPage>